// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/client/spot/domain/account_asset.go

// Package mock_domain is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	domain "github.com/arensusu/bitget-golang-sdk-api/pkg/client/spot/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockSpotGetAccountAssetsService is a mock of SpotGetAccountAssetsService interface.
type MockSpotGetAccountAssetsService struct {
	ctrl     *gomock.Controller
	recorder *MockSpotGetAccountAssetsServiceMockRecorder
}

// MockSpotGetAccountAssetsServiceMockRecorder is the mock recorder for MockSpotGetAccountAssetsService.
type MockSpotGetAccountAssetsServiceMockRecorder struct {
	mock *MockSpotGetAccountAssetsService
}

// NewMockSpotGetAccountAssetsService creates a new mock instance.
func NewMockSpotGetAccountAssetsService(ctrl *gomock.Controller) *MockSpotGetAccountAssetsService {
	mock := &MockSpotGetAccountAssetsService{ctrl: ctrl}
	mock.recorder = &MockSpotGetAccountAssetsServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpotGetAccountAssetsService) EXPECT() *MockSpotGetAccountAssetsServiceMockRecorder {
	return m.recorder
}

// Coin mocks base method.
func (m *MockSpotGetAccountAssetsService) Coin(arg0 string) *domain.SpotGetAccountAssetsService {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Coin", arg0)
	ret0, _ := ret[0].(*domain.SpotGetAccountAssetsService)
	return ret0
}

// Coin indicates an expected call of Coin.
func (mr *MockSpotGetAccountAssetsServiceMockRecorder) Coin(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Coin", reflect.TypeOf((*MockSpotGetAccountAssetsService)(nil).Coin), arg0)
}

// Do mocks base method.
func (m *MockSpotGetAccountAssetsService) Do() (domain.SpotGetAccountAssetsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Do")
	ret0, _ := ret[0].(domain.SpotGetAccountAssetsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Do indicates an expected call of Do.
func (mr *MockSpotGetAccountAssetsServiceMockRecorder) Do() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Do", reflect.TypeOf((*MockSpotGetAccountAssetsService)(nil).Do))
}
